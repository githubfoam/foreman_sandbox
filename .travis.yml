---
sudo: required
dist: bionic
notifications:
  slack:
    on_failure: always
matrix:
  fast_finish: true
  include:

    # - name: "spacewalk topology provision bash Python 3.7 on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-vagrant
    #     - sudo make deploy-libvirt
    #     - sudo make deploy-topology-katello
    #   after_success:
    #     - deactivate
    #     - sudo vagrant destroy -f # required to run Vagrantfile template        
    #     - sudo rm Vagrantfile # required to run Vagrantfile template        

    # - name: "cobbler topology provision bash Python 3.7 on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-vagrant
    #     - sudo make deploy-libvirt
    #     - sudo make deploy-topology-cobbler
    #   after_success:
    #     - deactivate
    #     - sudo vagrant destroy -f # required to run Vagrantfile template        
    #     - sudo rm Vagrantfile # required to run Vagrantfile template           

    - name: "build yocto latest revision sdk Python on yocto amd64 trusty"
      dist: trusty
      arch: amd64
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-yocto-latest-sdk
      after_success:
        - deactivate

    - name: "build yocto latest revision toolchain Python on yocto amd64 trusty"
      dist: trusty
      arch: amd64
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-yocto-latest-toolchain
      after_success:
        - deactivate

    - name: "build yocto release tag toolchain Python on yocto amd64 trusty"
      dist: trusty
      arch: amd64
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-yocto-toolchain
      after_success:
        - deactivate

    - name: "build yocto release tag sdk Python on yocto amd64 trusty"
      dist: trusty
      arch: amd64
      language: python
      # python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-yocto-sdk
      after_success:
        - deactivate

    # - name: "opennebula topology provision bash Python 3.7 on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-vagrant
    #     - sudo make deploy-libvirt
    #     - sudo make deploy-topology-opennebula
    #   after_success:
    #     - deactivate
    #     - sudo vagrant destroy -f # required to run Vagrantfile template        
    #     - sudo rm Vagrantfile # required to run Vagrantfile template          